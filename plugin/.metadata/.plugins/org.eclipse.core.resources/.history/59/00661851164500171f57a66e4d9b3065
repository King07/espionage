package edu.cwi.espionage.views;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Properties;
import javax.swing.JComponent;
import org.jdatepicker.impl.JDatePanelImpl;
import org.jdatepicker.impl.JDatePickerImpl;
import org.jdatepicker.impl.UtilDateModel;
import edu.cwi.espionage.interfaces.SelectedDatePickerListener;
import edu.cwi.espionage.util.DateLabelFormatter;

public class DateSelection extends JComponent implements ActionListener{

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private JDatePickerImpl datePicker;
	private List<SelectedDatePickerListener> datePickerListeners = new ArrayList<SelectedDatePickerListener>();
	

	public DateSelection() {
		super();
		UtilDateModel model = new UtilDateModel();
	    Properties p = new Properties();
	    p.put("text.today", "Today");
	    p.put("text.month", "Month");
	    p.put("text.year", "Year");
	    JDatePanelImpl datePanel = new JDatePanelImpl(model, p);
	    this.setDatePicker(new JDatePickerImpl(datePanel,new DateLabelFormatter()));
	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Date selectedDate = (Date) datePicker.getModel().getValue();
		fireSelectedYDatePicker(selectedDate);
		
	}

	
	
	public void addSelectedDatePickerListener(SelectedDatePickerListener listener) {
		datePickerListeners.add(listener);

	}
	
	private void fireSelectedYDatePicker(Date selectedDate) {
		if (!datePickerListeners.isEmpty()) {
			for (SelectedDatePickerListener datePickerListener : datePickerListeners) {
				datePickerListener.datePickerSelected(selectedDate);
			}
		}
	}

	public JDatePickerImpl getDatePicker() {
		return datePicker;
	}

	public void setDatePicker(JDatePickerImpl datePicker) {
		this.datePicker = datePicker;
	}
	
}
